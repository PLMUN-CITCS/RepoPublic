name: Make Organization Repositories Public

on:
  workflow_dispatch:

jobs:
  make_public:
    runs-on: ubuntu-latest
    permissions:
        actions: write
        attestations: write
        checks: write
        contents: write
        deployments: write
        id-token: write
        issues: write
        discussions: write
        packages: write
        pages: write
        pull-requests: write
        repository-projects: write
        security-events: write
        statuses: write

    steps:
      - name: Get Organization Repositories
        id: get_repos
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const org = context.repo.owner;
            const repoType = 'all'; // Or 'private' for testing
            let repos = [];
            let page = 1;
            while (true) {
              const response = await github.rest.repos.listForOrg({
                org,
                type: repoType,
                page,
                per_page: 100,
              });
              repos = repos.concat(response.data);
              if (response.data.length < 100) break;
              page++;
            }
            return JSON.stringify(repos); // Crucial: Stringify the array

      - name: Make Repositories Public
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const reposJson = ${{ steps.get_repos.outputs.return }};
            const repos = JSON.parse(reposJson); // Parse the JSON string
            const org = context.repo.owner;

            for (const repo of repos) {
              try {
                if (repo.private) {
                  console.log(`Making ${org}/${repo.name} public...`);
                  await github.rest.repos.update({
                    owner: org,
                    repo: repo.name,
                    private: false,
                  });
                  console.log(`${org}/${repo.name} is now public.`);
                } else {
                  console.log(`${org}/${repo.name} is already public. Skipping...`);
                }
              } catch (error) {
                console.error(`Error making ${org}/${repo.name} public: ${error}`);
              }
            }
